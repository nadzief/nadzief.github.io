{"version":3,"sources":["../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/isEqual.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/identity.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js"],"names":["module","exports","array","iteratee","index","length","result","Array","memoizeCapped","__webpack_require__","rePropName","reEscapeChar","stringToPath","string","charCodeAt","push","replace","match","number","quote","subString","baseToString","value","baseFor","createBaseFor","memoize","MAX_MEMOIZE_SIZE","func","key","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","Symbol","arrayMap","isArray","isSymbol","INFINITY","symbolProto","prototype","undefined","symbolToString","toString","call","fromRight","object","keysFunc","iterable","Object","props","keys","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","customizer","noCustomizer","data","objValue","srcValue","stack","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","other","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","hasOwnProperty","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","map","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","isArrayLike","eachFunc","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","tag","inverse","outline","cssModule","innerRef","Card","Tag","attributes","classes","CardBody","baseGetTag","isObjectLike","symbolTag","reIsDeepProp","reIsPlainProp"],"mappings":"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","file":"static/js/4.f16e93bd.chunk.js","sourcesContent":["/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;"],"sourceRoot":""}