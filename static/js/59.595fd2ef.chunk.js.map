{"version":3,"sources":["redux/data/dataType.js","redux/data/dataAction.js","components/Form/FormData.js","views/Data/TambahData.js"],"names":["GET_DATA_REQUEST","GET_DATA_SUCCESS","GET_DATA_FAILED","GET_DATA_BY_ID_REQUEST","GET_DATA_BY_ID_SUCCESS","GET_DATA_BY_ID_FAILED","POST_DATA_REQUEST","POST_DATA_SUCCESS","POST_DATA_FAILED","DELETE_DATA_REQUEST","DELETE_DATA_SUCCESS","DELETE_DATA_FAILED","EDIT_DATA_REQUEST","EDIT_DATA_FAILED","getData","dispatch","type","actionTypes","loading","URL","API","axios","get","then","response","data","payload","catch","error","failedFetchData","getDataById","id","concat","datas","failedFetchDataById","createData","post","swal","icon","title","button","history","push","failedPostData","deleteData","delete","success","failedDeleteData","editData","failedEditData","__webpack_require__","d","__webpack_exports__","handleCancel","DataForm","_ref","onSubmit","submitting","formStatus","react_default","a","createElement","className","noValidate","Field","name","component","renderField","label","value","style","float","disabled","onClick","_ref2","input","_ref2$meta","meta","touched","Object","assign","color","htmlFor","reduxForm","form","validate","formProps","errors","firstName","lastName","email","test","gender","ip_address","size","enableReinitialize","Tables","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","preventDefault","dataForm","syncError","values","forceUpdate","console","log","toggle","bind","assertThisInitialized","toggleFade","state","collapse","fadeIn","timeout","setState","prevState","Row","Col","xs","Fade","in","Card","CardHeader","Button","data-target","Collapse","isOpen","CardBody","FormData","Component","connect"],"mappings":"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","file":"static/js/59.595fd2ef.chunk.js","sourcesContent":["// Get Data\r\nexport const GET_DATA_REQUEST = 'GET_DATA_REQUEST';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n\r\n// Get Data By Id\r\nexport const GET_DATA_BY_ID_REQUEST = 'GET_DATA_BY_ID_REQUEST';\r\nexport const GET_DATA_BY_ID_SUCCESS = 'GET_DATA_BY_ID_SUCCESS';\r\nexport const GET_DATA_BY_ID_FAILED = 'GET_DATA_BY_ID_FAILED';\r\n\r\n// Post Data\r\nexport const POST_DATA_REQUEST = 'POST_DATA_REQUEST';\r\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\r\nexport const POST_DATA_FAILED = 'POST_DATA_FAILED';\r\n\r\n// Delete Data\r\nexport const DELETE_DATA_REQUEST = 'DELETE_DATA_REQUEST';\r\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\r\nexport const DELETE_DATA_FAILED = 'DELETE_DATA_FAILED';\r\n\r\n// Edit Data\r\nexport const EDIT_DATA_REQUEST = 'EDIT_DATA_REQUEST';\r\nexport const EDIT_DATA_SUCCESS = 'EDIT_DATA_SUCCESS';\r\nexport const EDIT_DATA_FAILED = 'EDIT_DATA_FAILED';","import axios from 'axios';\r\nimport * as actionTypes from './dataType';\r\nimport API from '../../root/';\r\nimport { history } from '../../helpers/history';\r\nimport swal from 'sweetalert';\r\n// import { push } from 'react-router-redux';\r\n\r\nexport function fetchData(data){\r\n    return{\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        payload: { data }\r\n    }\r\n}\r\n\r\nexport function fetchDataById(datas){\r\n    return{\r\n        type: actionTypes.GET_DATA_BY_ID_SUCCESS,\r\n        payload: { datas }\r\n    }\r\n}\r\n\r\nexport function failedFetchData(error){\r\n    return{\r\n        type: actionTypes.GET_DATA_FAILED,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nexport function failedFetchDataById(error){\r\n    return{\r\n        type: actionTypes.GET_DATA_BY_ID_FAILED,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nexport function failedPostData(error){\r\n    return{\r\n        type: actionTypes.POST_DATA_FAILED,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nexport function failedDeleteData(error){\r\n    return{\r\n        type: actionTypes.DELETE_DATA_FAILED,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nexport function failedEditData(error){\r\n    return{\r\n        type: actionTypes.EDIT_DATA_FAILED,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nexport function getData(){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.GET_DATA_REQUEST, loading: true })\r\n        const URL = API+`get/data/`\r\n        return axios.get(URL)\r\n            .then((response) => {\r\n                dispatch(fetchData(response.data))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(failedFetchData(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport function getDataById(id){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.GET_DATA_BY_ID_REQUEST, loading: true })\r\n        const URL = API+`get/data/${id}`\r\n        return axios.get(URL)\r\n            .then((response) => { \r\n                dispatch(fetchDataById(response.data))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(failedFetchDataById(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport function createData(data){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.POST_DATA_REQUEST, loading: true })\r\n        const URL = API+`post/data/`;\r\n        return axios.post(URL, data)\r\n            .then((response) => {\r\n                dispatch({ type: actionTypes.POST_DATA_SUCCESS, payload: response.data })\r\n                swal({\r\n                  icon: 'success',\r\n                  title: 'Berhasil Tambah Data',\r\n                  button: true,\r\n                })\r\n                history.push('/data')\r\n            })\r\n            .catch((error) => {\r\n                dispatch(failedPostData(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport function deleteData(id){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.DELETE_DATA_REQUEST, loading: true })\r\n        const URL = API+`delete/data/${id}`\r\n        return axios.delete(URL)\r\n            .then((response) => {\r\n                dispatch({ type: actionTypes.DELETE_DATA_SUCCESS, success: true })\r\n                dispatch(getData())\r\n            })\r\n            .catch((error) => {\r\n                dispatch(failedDeleteData(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport function editData(data){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.EDIT_DATA_REQUEST, loading: true })\r\n        const URL = API+`edit/data/`\r\n        return axios.post(URL, data)\r\n            .then((response) => {\r\n                swal({\r\n                    icon: 'success',\r\n                    title: 'Berhasil Edit Data',\r\n                    button: true,\r\n                })\r\n                history.push('/data')\r\n            })\r\n            .catch((error) => {\r\n                dispatch(failedEditData(error))\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { history } from '../../helpers/history';\r\n\r\nfunction handleCancel() {\r\n    history.push('/data');\r\n}\r\n\r\n// Data Form\r\nlet DataForm = ({ onSubmit, submitting, formStatus }) => {\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12 col-lg-12\">\r\n                <form onSubmit={onSubmit} noValidate>\r\n                   <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-lg-6 col-md-6\"> \r\n                            <Field name=\"first_name\" component={renderField} type=\"text\" id=\"first-name\" label=\"First Name\" />\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-lg-6 col-md-6\">\r\n                            <Field name=\"last_name\" component={renderField} type=\"text\" id=\"last-name\" label=\"Last Name\" />\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <Field name=\"email\" component={renderField} type=\"email\" id=\"email-address\" label=\"Email Address\" />\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <label> Gender </label>\r\n                            <Field name=\"gender\" component=\"select\" className=\"form-control\">\r\n                                <option> -- Silakan Pilih -- </option>\r\n                                <option value=\"Male\"> Male </option>\r\n                                <option value=\"Female\"> Female </option>\r\n                            </Field>\r\n                            <br/>    \r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <Field name=\"ip_address\" component={renderField} type=\"text\" id=\"ip-address\" label=\"IP Address\" />\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <label> Size </label>\r\n                            <Field name=\"size\" component=\"select\" className=\"form-control\">\r\n                                <option> -- Silakan Pilih -- </option>\r\n                                <option value=\"XS\"> XS </option>\r\n                                <option value=\"S\"> S </option>\r\n                                <option value=\"M\"> M </option>\r\n                                <option value=\"L\"> L </option>\r\n                                <option value=\"XL\"> XL </option>\r\n                                <option value=\"2XL\"> 2XL </option>\r\n                                <option value=\"3XL\"> 3XL </option>\r\n                            </Field>\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <label> Title </label>\r\n                            <Field name=\"title\" component=\"select\" className=\"form-control\">\r\n                                <option> -- Silakan Pilih -- </option>\r\n                                <option value=\"Dr\"> Dr </option>\r\n                                <option value=\"Honorable\"> Honorable </option>\r\n                                <option value=\"Mr\"> Mr </option>\r\n                                <option value=\"Mrs\"> Mrs </option>\r\n                                <option value=\"Ms\"> Ms </option>\r\n                                <option value=\"Rev\"> Rev </option>\r\n                            </Field>             \r\n                            <br/>   \r\n                        </div>\r\n                        <div className=\"col-sm-12 col-lg-12 col-md-12\">\r\n                            <div style={{ float: 'right' }}>\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    className=\"btn btn-primary data-submit\" \r\n                                    disabled={submitting}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                                &nbsp;\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst renderField = ({\r\n    input,\r\n    label,\r\n    type,\r\n    id,\r\n    meta: {touched, error}\r\n}) => (\r\n    // Render schema for checkbox\r\n    (type === 'checkbox')\r\n        ?\r\n        <div className=\"checkbox\">\r\n            <label>\r\n                <input {...input} type={type}/>\r\n                {label}\r\n            </label>\r\n            {touched &&\r\n            (error &&\r\n            <span className=\"error-text\" style={{ color: 'red' }}>\r\n            {error}\r\n          </span>)}\r\n        </div>\r\n        :\r\n        // Render schema for inputs\r\n        <div className=\"form-group\">\r\n            <label htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <input {...input} id={id} type={type} className=\"form-control\"/>\r\n            {touched &&\r\n            (error &&\r\n            <span className=\"error-text\" style={{ color: 'red' }}>\r\n            {error}\r\n          </span>)}\r\n        </div>\r\n);\r\n\r\nfunction validate(formProps){\r\n    const errors = {};\r\n\r\n    if(!formProps.firstName){\r\n        errors.firstName = 'Required';\r\n    }\r\n    if(!formProps.lastName){\r\n        errors.lastName = 'Required';\r\n    }\r\n    if(!formProps.email){\r\n        errors.email = 'Required';\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)){\r\n        errors.email = 'Invalid Email Address';\r\n    }\r\n    if(!formProps.gender){\r\n        errors.gender = 'Required';\r\n    }\r\n    if(!formProps.ip_address){\r\n        errors.ip_address = 'Required';\r\n    }\r\n    if(!formProps.size){\r\n        errors.size = 'Required';\r\n    }\r\n    if(!formProps.title){\r\n        errors.title = 'Required';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nDataForm = reduxForm({\r\n    form: 'data',\r\n    validate,\r\n    enableReinitialize: true\r\n})(DataForm);\r\n\r\nexport default DataForm;","import React, { Component } from 'react';\r\nimport { \r\n  Button,\r\n  Card, \r\n  CardBody, \r\n  CardHeader, \r\n  Col, \r\n  Row, \r\n  Fade,\r\n  Collapse,\r\n} from 'reactstrap';\r\n// import swal from 'sweetalert';\r\nimport DataForm from '../../components/Form/FormData'\r\n// import FieldArraysForm from '../../components/Form/FormDataArray';\r\n// import { Redirect } from 'react-router';\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// import { bindActionCreators } from 'redux';\r\nimport { createData } from '../../redux/data/dataAction';\r\n\r\nclass Tables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleFade = this.toggleFade.bind(this);\r\n    this.state = {\r\n        collapse: true,\r\n        fadeIn: true,\r\n        timeout: 300,\r\n    //     redirect: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = event => {\r\n    event.preventDefault();\r\n    if(!this.props.dataForm.syncError){\r\n      let data =  this.props.dataForm.values;\r\n      this.props.dispatch(createData(data));\r\n    }\r\n    this.forceUpdate();\r\n    console.log(this.props.dataForm.values)\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  toggleFade() {\r\n    this.setState((prevState) => { return { fadeIn: !prevState }});\r\n  }\r\n  \r\n  render() {\r\n    // const { redirect } = this.state;\r\n    // if(redirect){\r\n    //   return <Redirect to=\"/data\" />\r\n    // }\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <Fade timeout={this.state.timeout} in={this.state.fadeIn}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <i className=\"fa fa-edit\"></i> Tambah Data\r\n                  <div className=\"card-header-actions\">\r\n                    <Button color=\"link\" className=\"card-header-action btn-setting\"><i className=\"icon-settings\"></i></Button>\r\n                    <Button color=\"link\" className=\"card-header-action btn-minimize\" data-target=\"#collapseExample\" onClick={this.toggle}><i className=\"icon-arrow-up\"></i></Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <Collapse isOpen={this.state.collapse} id=\"collapseExample\">\r\n                  <CardBody>\r\n                    <DataForm onSubmit={this.handleClick} />\r\n                  </CardBody>\r\n                </Collapse>\r\n              </Card>\r\n            </Fade>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataForm: state.form.data\r\n  };\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     actions: bindActionCreators(createData, dispatch)\r\n//   };\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Tables);\r\n\r\n// export default Tables;"],"sourceRoot":""}