{"version":3,"sources":["views/Catalog.js","views/Nested.js","views/Warung.js","shared/Navbar.js","shared/Footer.js","indes.js","registerServiceWorker.js","index.js"],"names":["products","id","image","label","content","CatalogView","react_default","a","createElement","Fragment","style","marginRight","marginLeft","Grid_default","container","spacing","map","product","item","key","sm","md","lg","Card_default","CardMedia_default","paddingTop","title","CardContent_default","Typography_default","gutterBottom","variant","component","CardActions_default","Link","to","Button_default","size","color","ProductView","_ref","match","find","params","console","log","SubView","_ref2","sectionName","NestedView","Route","exact","path","url","concat","Warung","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","prop","event","setState","defineProperty","target","value","fileUploadChange","foto","files","handleClick","preventDefault","datas","nama_warung","state","namaWarung","kode_warung","kodeWarung","alamat","no_telp","noTelp","deskripsi","data","FormData","append","axios","post","then","redirect","catch","alert","uuidv4","my_table","objtb","openDb","upgradeDB","createObjectStore","idb_pos_trx","get","_get","asyncToGenerator","regenerator_default","mark","_callee","db","wrap","_context","prev","next","sent","abrupt","transaction","objectStore","stop","_x","apply","arguments","getAll","_getAll","_callee2","_context2","set","_set","_callee3","val","tx","_context3","autoIncrement","put","complete","_x2","_x3","delete","_delete2","_callee4","_context4","_x4","clear","_clear","_callee5","_context5","keys","_keys","_callee6","_context6","getAllKeys","_x5","navigator","window","serviceWorker","ready","sw","sync","register","bind","assertThisInitialized","Redirect","Container","Row","justify","es_Card","width","Body","Col","Form","Group","Label","Control","type","placeholder","onChange","as","rows","es_Button","onClick","Component","Navs","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","Item","Divider","eventKey","Jumbotron","Footer","textAlign","NotFound","Indes","BrowserRouter","shared_Navbar","Switch","WarungView","shared_Footer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","lib_default","indes","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1da236a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst products = [\r\n    {\r\n        id : '1',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg',\r\n        label: 'Nutella',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '2',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Pane',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet' \r\n    },\r\n    {\r\n        id : '3',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Latte',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '4',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Cappucino',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '5',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Mochacino',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '6',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Coffee',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    }\r\n];\r\n\r\nexport const CatalogView = () => {\r\n    // const { classes } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <div style={{ marginRight: '5%', marginLeft: '5%' }}>\r\n            <h3> Catalog Produk </h3>\r\n            <main>\r\n                <div>\r\n                    {/* End hero unit */}\r\n                    <Grid container spacing={40}>\r\n                        { products.map((product) =>\r\n                            <Grid item key={product.id} sm={6} md={4} lg={4}>\r\n                            <Card>\r\n                              <CardMedia\r\n                                style={{ paddingTop: '56.25%' }}\r\n                                image={product.image}\r\n                                title=\"Image title\"\r\n                              />\r\n                              <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                  {product.label}\r\n                                </Typography>\r\n                                <Typography>\r\n                                  {product.content}\r\n                                </Typography>\r\n                              </CardContent>\r\n                              <CardActions>\r\n                                <Link to={`/product/`+product.id}>\r\n                                  <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                    View\r\n                                  </Button>\r\n                                </Link>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                  Edit\r\n                                </Button>\r\n                              </CardActions>\r\n                            </Card>\r\n                          </Grid> \r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const ProductView = ({ match }) => {\r\n    const product = products.find(item => item.id === match.params.id);\r\n    console.log(products, match.params.id);\r\n    return(\r\n        <React.Fragment>\r\n            <div style={{ marginRight: '5%', marginLeft: '5%' }}>\r\n                <h3> Detail Produk </h3>\r\n                <main>\r\n                    <div>\r\n                        <div>\r\n                            <Link to={`/catalog`}> Back to Catalog </Link>\r\n                        </div>\r\n                        {/* End hero unit */}\r\n                        <Grid container spacing={40}>\r\n                            <Grid item key={product.id} sm={6} md={4} lg={12}>\r\n                              <Card>\r\n                                <CardMedia\r\n                                  style={{ paddingTop: '50%' }}\r\n                                  image={product.image}\r\n                                  title=\"Image title\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {product.label}\r\n                                  </Typography>\r\n                                  <Typography>\r\n                                    {product.content}\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </Card>\r\n                            </Grid> \r\n                        </Grid>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {Link, Route } from 'react-router-dom';\r\n\r\nconst NestedView = ({ match }) => {\r\n    return(\r\n        <div>\r\n            <Route exact path={match.url} />\r\n            <h3> Silakan Pilih : </h3>\r\n            <ul>\r\n                <li> <Link to={`${match.url}/info`}> Info </Link> </li>\r\n                <li> <Link to={`${match.url}/about`}> About </Link> </li>\r\n                <li> <Link to={`${match.url}/contacs`}> Contact </Link> </li>\r\n            </ul>\r\n\r\n            <Route path={`${match.url}/:sectionName`} component={SubView} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst SubView = ({ match }) => {\r\n    return(\r\n        <div>\r\n            <h3> Section : {match.params.sectionName} </h3>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NestedView;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport uuidv4 from 'uuid/v4';\r\n// import idb from '../idb.js';\r\nimport { openDb } from 'idb';\r\n\r\nclass Warung extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            namaWarung: '',\r\n            kodeWarung: '',\r\n            alamat: '',\r\n            noTelp: '',\r\n            deskripsi: '',\r\n            foto: '',\r\n            redirect: false,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleChange = prop => event => {\r\n        this.setState({ [prop]: event.target.value })\r\n    }\r\n\r\n    fileUploadChange = prop => event => {\r\n        this.setState({\r\n            foto: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.preventDefault()\r\n        const URL = 'http://localhost:3333/post/warung'\r\n        var datas = {\r\n            'nama_warung': this.state.namaWarung,\r\n            'kode_warung': this.state.kodeWarung,\r\n            'alamat': this.state.alamat,\r\n            'no_telp': this.state.noTelp,\r\n            'deskripsi': this.state.deskripsi,\r\n        }\r\n        const data = new FormData();\r\n        data.append('nama_warung', this.state.namaWarung);\r\n        data.append('kode_warung', this.state.kodeWarung);\r\n        data.append('alamat', this.state.alamat);\r\n        data.append('no_telp', this.state.noTelp);\r\n        data.append('deskripsi', this.state.deskripsi);\r\n        data.append('foto', this.state.foto);\r\n\r\n        // const config = {\r\n        //     headers: {\r\n        //         'content-type': 'multipart/form-data'\r\n        //     }\r\n        // }\r\n\r\n        axios.post(URL, datas)\r\n            .then(() => this.setState({ redirect: true }))\r\n            .catch(() => alert('Error'));\r\n\r\n        const id = uuidv4();\r\n        const my_table = 'tb_warung';\r\n\r\n        const objtb = openDb('db_warung', 1, upgradeDB => {\r\n            upgradeDB.createObjectStore(my_table);\r\n        });\r\n\r\n        const idb_pos_trx = {\r\n            async get(key){\r\n                const db = await objtb;\r\n                return db.transaction(my_table).objectStore(my_table).get(key);\r\n            },\r\n            async getAll(){\r\n                const db = await objtb;\r\n                return db.transaction(my_table).objectStore(my_table).getAll();\r\n            },\r\n            async set(key, val){\r\n                const db = await objtb;\r\n                const tx = db.transaction(my_table, 'readwrite', {autoIncrement: true});\r\n                tx.objectStore(my_table).put(val, key);\r\n                return tx.complete;\r\n            },\r\n            async delete(key){\r\n                const db = await objtb;\r\n                const tx = db.transaction(my_table, 'readwrite');\r\n                tx.objectStore(my_table).delete(key);\r\n                return tx.complete;\r\n            },\r\n            async clear(){\r\n                const db = await objtb;\r\n                const tx = db.transaction(my_table, 'readwrite');\r\n                tx.objectStore(my_table).clear();\r\n                return tx.complete;\r\n            },\r\n            async keys(key){\r\n                const db = await objtb;\r\n                return db.transaction(my_table).objectStore(my_table).getAllKeys(key);\r\n            }\r\n        };\r\n\r\n        if('serviceWorker' in navigator && 'SyncManager' in window){\r\n            console.log(id, datas, 'service worker and background sync is ready')\r\n            navigator.serviceWorker.ready\r\n            .then(function(sw){\r\n                idb_pos_trx.set(id, datas)\r\n                .then(function(){\r\n                    sw.sync.register('sync-new-trx');\r\n                });\r\n            });\r\n        }else{\r\n            idb_pos_trx.set(id, datas);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if(redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <Container>\r\n                        <Row justify=\"center\">\r\n                            <Card style={{ width: '100%' }}>\r\n                                <Card.Body>\r\n                                    <Col sm={12}>\r\n                                        <Form id=\"form_warung\">\r\n                                            <Form.Group>\r\n                                                <Form.Label> Nama Warung </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"nama_warung\"  \r\n                                                    type=\"text\" \r\n                                                    placeholder=\"Input Nama Warung\"\r\n                                                    value={this.state.namaWarung}\r\n                                                    onChange={this.handleChange('namaWarung')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Kode Warung </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"kode_warung\"\r\n                                                    as=\"select\"\r\n                                                    value={this.state.kodeWarung}\r\n                                                    onChange={this.handleChange('kodeWarung')}\r\n                                                >\r\n                                                    <option> -- Select -- </option>\r\n                                                    <option key=\"1\" value=\"0001\"> 0001 </option>\r\n                                                    <option key=\"2\" value=\"0002\"> 0002 </option>\r\n                                                    <option key=\"3\" value=\"0003\"> 0003 </option>\r\n                                                    <option key=\"4\" value=\"0004\"> 0004 </option>\r\n                                                    <option key=\"5\" value=\"0005\"> 0005 </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Alamat </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"alamat\"\r\n                                                    as=\"textarea\" \r\n                                                    rows=\"3\"\r\n                                                    value={this.state.alamat}\r\n                                                    onChange={this.handleChange('alamat')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> No. Telp </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"no_telp\" \r\n                                                    type=\"text\" \r\n                                                    placeholder=\"Input Kode Warung\"\r\n                                                    value={this.state.noTelp}\r\n                                                    onChange={this.handleChange('noTelp')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Deskripsi </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"deskripsi\"\r\n                                                    as=\"textarea\" \r\n                                                    rows=\"3\"\r\n                                                    value={this.state.deskripsi}\r\n                                                    onChange={this.handleChange('deskripsi')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Upload Foto </Form.Label>\r\n                                                <Form.Control \r\n                                                    type=\"file\"\r\n                                                    onChange={this.fileUploadChange()} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Button \r\n                                                variant=\"primary\" \r\n                                                type=\"submit\"\r\n                                                onClick={this.handleClick}\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                    </Container>\r\n                </div>    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Warung;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n    Jumbotron,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nclass Navs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"#home\">React PWA</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                      <Nav className=\"mr-auto\">\r\n                        <Nav.Link>\r\n                            <Link to=\"/\" style={{ color: 'white' }}>  \r\n                                Home  \r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/catalog\" style={{ color: 'white' }}>  \r\n                                Catalog\r\n                            </Link>  \r\n                        </Nav.Link> \r\n                        <Nav.Link>\r\n                            <Link to=\"/warung\" style={{ color: 'white' }}>\r\n                                Warung\r\n                            </Link> \r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/nested\" style={{ color: 'white' }}>\r\n                                Nested\r\n                            </Link>  \r\n                        </Nav.Link>\r\n                        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\" style={{ color: 'white' }}>\r\n                          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                          <NavDropdown.Divider />\r\n                          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                      </Nav>\r\n                      <Nav>\r\n                        <Nav.Link href=\"#deets\">Sign In</Nav.Link>\r\n                        <Nav.Link eventKey={2} href=\"#memes\">\r\n                          Sign Up\r\n                        </Nav.Link>\r\n                      </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                  <h1>Hello, world!</h1>\r\n                  <p>\r\n                    This is a simple hero unit, a simple jumbotron-style component for calling\r\n                    extra attention to featured content or information.\r\n                  </p>\r\n                  <p>\r\n                    <Button variant=\"primary\">Learn more</Button>\r\n                  </p>\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Navs;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer\">\r\n              <div className=\"container\" style={{ textAlign: 'center' }}>\r\n                <span className=\"text-muted\"> Nadzief Corp @2019 </span>\r\n              </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { CatalogView, ProductView } from './views/Catalog';\r\nimport NestedView from './views/Nested';\r\nimport WarungView from './views/Warung';\r\nimport Nav from './shared/Navbar';\r\nimport Footer from './shared/Footer';\r\n\r\nfunction NotFound() {\r\n    return(\r\n        <div>\r\n            <h1> 404 Not Found </h1>\r\n            <p> <h3> The Page What Your Request Is Not Found </h3> </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass Indes extends Component {\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div>    \r\n                    <Nav />\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={CatalogView} />\r\n                            <Route path=\"/warung\" component={WarungView} />\r\n                            <Route path=\"/catalog\" component={CatalogView} />\r\n                            <Route path=\"/product/:id\" component={ProductView} />\r\n                            <Route path=\"/nested\" component={NestedView} />\r\n                            <Route component={NotFound} /> \r\n                        </Switch>\r\n                    <div>\r\n                        <Footer />\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Indes;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Indeks from './indeks';\nimport Indes from './indes';\nimport * as serviceWorker from './registerServiceWorker';\nimport HttpsRedirect from 'react-https-redirect';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <HttpsRedirect>\n            <Indes />\n        </HttpsRedirect>\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}