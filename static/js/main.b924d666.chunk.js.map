{"version":3,"sources":["views/Catalog.js","views/Nested.js","shared/Api.js","views/warung/Warung.js","views/post_trx.js","views/warung/postWarung.js","shared/Navbar.js","shared/Footer.js","indes.js","registerServiceWorker.js","index.js"],"names":["products","id","image","label","content","CatalogView","react_default","a","createElement","Fragment","style","marginRight","marginLeft","Grid_default","container","spacing","map","product","item","key","sm","md","lg","Card_default","CardMedia_default","paddingTop","title","CardContent_default","Typography_default","gutterBottom","variant","component","CardActions_default","Link","to","Button_default","size","color","ProductView","_ref","match","find","params","console","log","SubView","_ref2","sectionName","NestedView","Route","exact","path","url","concat","URL","Warung","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","redirect","axios","defaults","baseURL","headers","post","get","then","res","_this2","setState","catch","error","Redirect","Container","Row","justify","Col","Breadcrumb","Item","active","es_Button","className","Table","striped","bordered","hover","responsive","nama_warung","kode_warung","alamat","no_telp","deskripsi","Component","my_table","objtb","openDb","upgradeDB","createObjectStore","idb_pos_trx","_get","asyncToGenerator","regenerator_default","mark","_callee","db","wrap","_context","prev","next","sent","abrupt","transaction","objectStore","stop","_x","apply","arguments","getAll","_getAll","_callee2","_context2","set","_set","_callee3","val","tx","_context3","autoIncrement","put","complete","_x2","_x3","delete","_delete2","_callee4","_context4","_x4","clear","_clear","_callee5","_context5","keys","_keys","_callee6","_context6","getAllKeys","_x5","handleChange","prop","event","defineProperty","target","value","fileUploadChange","foto","files","handleClick","preventDefault","datas","namaWarung","kodeWarung","noTelp","uuidv4","navigator","window","serviceWorker","ready","sw","sync","register","bind","assertThisInitialized","es_Card","width","Body","Form","Group","Label","Control","type","placeholder","onChange","as","rows","onClick","Navs","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","eventKey","Jumbotron","Footer","textAlign","NotFound","Indes","BrowserRouter","shared_Navbar","Switch","WarungView","PostWarungView","shared_Footer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","lib_default","indes","document","getElementById","process","origin","addEventListener","fetch","response","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b924d666.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst products = [\r\n    {\r\n        id : '1',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg',\r\n        label: 'Nutella',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '2',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Pane',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet' \r\n    },\r\n    {\r\n        id : '3',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Latte',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '4',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Cappucino',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '5',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Mochacino',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    },\r\n    {\r\n        id : '6',\r\n        image: 'https://www.w3schools.com/w3css/img_lights.jpg', \r\n        label: 'Coffee',\r\n        content: 'Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet'\r\n    }\r\n];\r\n\r\nexport const CatalogView = () => {\r\n    // const { classes } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <div style={{ marginRight: '5%', marginLeft: '5%' }}>\r\n            <h3> Catalog Produk </h3>\r\n            <main>\r\n                <div>\r\n                    {/* End hero unit */}\r\n                    <Grid container spacing={40}>\r\n                        { products.map((product) =>\r\n                            <Grid item key={product.id} sm={6} md={4} lg={4}>\r\n                            <Card>\r\n                              <CardMedia\r\n                                style={{ paddingTop: '56.25%' }}\r\n                                image={product.image}\r\n                                title=\"Image title\"\r\n                              />\r\n                              <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                  {product.label}\r\n                                </Typography>\r\n                                <Typography>\r\n                                  {product.content}\r\n                                </Typography>\r\n                              </CardContent>\r\n                              <CardActions>\r\n                                <Link to={`/product/`+product.id}>\r\n                                  <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                    View\r\n                                  </Button>\r\n                                </Link>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                  Edit\r\n                                </Button>\r\n                              </CardActions>\r\n                            </Card>\r\n                          </Grid> \r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const ProductView = ({ match }) => {\r\n    const product = products.find(item => item.id === match.params.id);\r\n    console.log(products, match.params.id);\r\n    return(\r\n        <React.Fragment>\r\n            <div style={{ marginRight: '5%', marginLeft: '5%' }}>\r\n                <h3> Detail Produk </h3>\r\n                <main>\r\n                    <div>\r\n                        <div>\r\n                            <Link to={`/catalog`}> Back to Catalog </Link>\r\n                        </div>\r\n                        {/* End hero unit */}\r\n                        <Grid container spacing={40}>\r\n                            <Grid item key={product.id} sm={6} md={4} lg={12}>\r\n                              <Card>\r\n                                <CardMedia\r\n                                  style={{ paddingTop: '50%' }}\r\n                                  image={product.image}\r\n                                  title=\"Image title\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {product.label}\r\n                                  </Typography>\r\n                                  <Typography>\r\n                                    {product.content}\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </Card>\r\n                            </Grid> \r\n                        </Grid>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {Link, Route } from 'react-router-dom';\r\n\r\nconst NestedView = ({ match }) => {\r\n    return(\r\n        <div>\r\n            <Route exact path={match.url} />\r\n            <h3> Silakan Pilih : </h3>\r\n            <ul>\r\n                <li> <Link to={`${match.url}/info`}> Info </Link> </li>\r\n                <li> <Link to={`${match.url}/about`}> About </Link> </li>\r\n                <li> <Link to={`${match.url}/contacs`}> Contact </Link> </li>\r\n            </ul>\r\n\r\n            <Route path={`${match.url}/:sectionName`} component={SubView} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst SubView = ({ match }) => {\r\n    return(\r\n        <div>\r\n            <h3> Section : {match.params.sectionName} </h3>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NestedView;","import axios from 'axios';\r\n\r\nconst URL = 'http://localhost:3333';\r\n\r\nexport function getWarung(){\r\n    axios.defaults.baseURL = URL;\r\n    axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    return axios.get('/get/warung')\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button, Breadcrumb, Table } from 'react-bootstrap';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { getWarung } from '../../shared/Api';\r\n\r\nclass Warung extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            redirect: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await getWarung().then(res => {\r\n            this.setState({ data: res.data.data })\r\n        })\r\n        .catch(function(error){\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if(redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <Container>\r\n                        <Row justify=\"left\">\r\n                            <Col sm={12}>\r\n                                <Breadcrumb>\r\n                                    <Breadcrumb.Item> Home </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item active>Warung</Breadcrumb.Item>\r\n                                </Breadcrumb>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Link to=\"create-warung\">\r\n                                    <Button variant=\"primary\">\r\n                                        <i className=\"fas fa-user-plus\">\r\n                                        </i> &nbsp;\r\n                                        Tambah Warung\r\n                                    </Button>\r\n                                    <br/><br/>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Nama Warung</th>\r\n                                            <th>Kode Warung</th>\r\n                                            <th>Alamat</th>\r\n                                            <th>No. Telp</th>\r\n                                            <th>Deskripsi</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.data.map(function(item){\r\n                                            return(\r\n                                                <tr key={item.id}>\r\n                                                    <td> {item.nama_warung} </td>\r\n                                                    <td> {item.kode_warung} </td>\r\n                                                    <td> {item.alamat} </td>\r\n                                                    <td> {item.no_telp} </td>\r\n                                                    <td> {item.deskripsi} </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Warung;","import { openDb } from 'idb';\r\n\r\nconst my_table = 'tb_warung';\r\n\r\nconst objtb = openDb('db_warung', 1, upgradeDB => {\r\n    upgradeDB.createObjectStore(my_table);\r\n});\r\n\r\nconst idb_pos_trx = {\r\n    async get(key){\r\n        const db = await objtb;\r\n        return db.transaction(my_table).objectStore(my_table).get(key);\r\n    },\r\n    async getAll(){\r\n        const db = await objtb;\r\n        return db.transaction(my_table).objectStore(my_table).getAll();\r\n    },\r\n    async set(key, val){\r\n        const db = await objtb;\r\n        const tx = db.transaction(my_table, 'readwrite', {autoIncrement: true});\r\n        tx.objectStore(my_table).put(val, key);\r\n        return tx.complete;\r\n    },\r\n    async delete(key){\r\n        const db = await objtb;\r\n        const tx = db.transaction(my_table, 'readwrite');\r\n        tx.objectStore(my_table).delete(key);\r\n        return tx.complete;\r\n    },\r\n    async clear(){\r\n        const db = await objtb;\r\n        const tx = db.transaction(my_table, 'readwrite');\r\n        tx.objectStore(my_table).clear();\r\n        return tx.complete;\r\n    },\r\n    async keys(key){\r\n        const db = await objtb;\r\n        return db.transaction(my_table).objectStore(my_table).getAllKeys(key);\r\n    }\r\n};\r\n\r\nexport function kirimData(tb_warung){\r\n  console.log('processing data', tb_warung.nama_warung);\r\n  fetch('http://localhost:3333/post/warung',{\r\n    headers:{\r\n    method: 'POST',\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nama_warung: tb_warung.nama_warung,\r\n      kode_warung: tb_warung.kode_warung,\r\n      alamat: tb_warung.alamat,\r\n      no_telp: tb_warung.no_telp,\r\n      deksripsi: tb_warung.deskripsi\r\n    })\r\n  })\r\n  .then(function(response){\r\n    response.text().then(function(textku){\r\n      if(textku === \"oke\"){\r\n        console.log('deleting data', tb_warung.nama_warung);\r\n        idb_pos_trx.delete(tb_warung.nama_warung)\r\n      }\r\n    });\r\n  })\r\n  .catch(function(err){\r\n    console.log('error', err);\r\n  });\r\n}\r\n\r\nexport default idb_pos_trx;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport uuidv4 from 'uuid/v4';\r\n// import idb from '../idb.js';\r\n// import { openDb } from 'idb';\r\nimport idb_pos_trx from '../../views/post_trx';\r\n\r\nclass Warung extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            namaWarung: '',\r\n            kodeWarung: '',\r\n            alamat: '',\r\n            noTelp: '',\r\n            deskripsi: '',\r\n            foto: '',\r\n            redirect: false,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleChange = prop => event => {\r\n        this.setState({ [prop]: event.target.value })\r\n    }\r\n\r\n    fileUploadChange = prop => event => {\r\n        this.setState({\r\n            foto: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.preventDefault()\r\n        var datas = {\r\n            'nama_warung': this.state.namaWarung,\r\n            'kode_warung': this.state.kodeWarung,\r\n            'alamat': this.state.alamat,\r\n            'no_telp': this.state.noTelp,\r\n            'deskripsi': this.state.deskripsi,\r\n        }\r\n\r\n        const id = uuidv4();\r\n\r\n        if('serviceWorker' in navigator && 'SyncManager' in window){\r\n            console.log(id);\r\n            console.log(datas);\r\n            console.log('service worker and background sync is ready');\r\n            navigator.serviceWorker.ready\r\n            .then(function(sw){\r\n                idb_pos_trx.set(id, datas)\r\n                .then(function(){\r\n                    sw.sync.register('sync-new-trx');\r\n                });\r\n            });\r\n        }else{\r\n            idb_pos_trx.set(id, datas);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if(redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <Container>\r\n                        <Row justify=\"center\">\r\n                            <Card style={{ width: '100%' }}>\r\n                                <Card.Body>\r\n                                    <Col sm={12}>\r\n                                        <Form id=\"form_warung\">\r\n                                            <Form.Group>\r\n                                                <Form.Label> Nama Warung </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"nama_warung\"  \r\n                                                    type=\"text\" \r\n                                                    placeholder=\"Input Nama Warung\"\r\n                                                    value={this.state.namaWarung}\r\n                                                    onChange={this.handleChange('namaWarung')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Kode Warung </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"kode_warung\"\r\n                                                    as=\"select\"\r\n                                                    value={this.state.kodeWarung}\r\n                                                    onChange={this.handleChange('kodeWarung')}\r\n                                                >\r\n                                                    <option> -- Select -- </option>\r\n                                                    <option key=\"1\" value=\"0001\"> 0001 </option>\r\n                                                    <option key=\"2\" value=\"0002\"> 0002 </option>\r\n                                                    <option key=\"3\" value=\"0003\"> 0003 </option>\r\n                                                    <option key=\"4\" value=\"0004\"> 0004 </option>\r\n                                                    <option key=\"5\" value=\"0005\"> 0005 </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Alamat </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"alamat\"\r\n                                                    as=\"textarea\" \r\n                                                    rows=\"3\"\r\n                                                    value={this.state.alamat}\r\n                                                    onChange={this.handleChange('alamat')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> No. Telp </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"no_telp\" \r\n                                                    type=\"text\" \r\n                                                    placeholder=\"Input Kode Warung\"\r\n                                                    value={this.state.noTelp}\r\n                                                    onChange={this.handleChange('noTelp')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Deskripsi </Form.Label>\r\n                                                <Form.Control \r\n                                                    id=\"deskripsi\"\r\n                                                    as=\"textarea\" \r\n                                                    rows=\"3\"\r\n                                                    value={this.state.deskripsi}\r\n                                                    onChange={this.handleChange('deskripsi')} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label> Upload Foto </Form.Label>\r\n                                                <Form.Control \r\n                                                    type=\"file\"\r\n                                                    onChange={this.fileUploadChange()} \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Button \r\n                                                variant=\"primary\" \r\n                                                type=\"submit\"\r\n                                                onClick={this.handleClick}\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                    </Container>\r\n                </div>    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Warung;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n    Jumbotron,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nclass Navs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"#home\">React PWA</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                      <Nav className=\"mr-auto\">\r\n                        <Nav.Link>\r\n                            <Link to=\"/\" style={{ color: 'white' }}>  \r\n                                Home  \r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/catalog\" style={{ color: 'white' }}>  \r\n                                Catalog\r\n                            </Link>  \r\n                        </Nav.Link> \r\n                        <Nav.Link>\r\n                            <Link to=\"/warung\" style={{ color: 'white' }}>\r\n                                Warung\r\n                            </Link> \r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Link to=\"/nested\" style={{ color: 'white' }}>\r\n                                Nested\r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\" style={{ color: 'white' }}>\r\n                          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                          <NavDropdown.Divider />\r\n                          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                      </Nav>\r\n                      <Nav>\r\n                        <Nav.Link href=\"#deets\">Sign In</Nav.Link>\r\n                        <Nav.Link eventKey={2} href=\"#memes\">\r\n                          Sign Up\r\n                        </Nav.Link>\r\n                      </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                  <h1>Hello, world!</h1>\r\n                  <p>\r\n                    This is a simple hero unit, a simple jumbotron-style component for calling\r\n                    extra attention to featured content or information.\r\n                  </p>\r\n                  <p>\r\n                    <Button variant=\"primary\">Learn more</Button>\r\n                  </p>\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Navs;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer\">\r\n              <div className=\"container\" style={{ textAlign: 'center' }}>\r\n                <span className=\"text-muted\"> Nadzief Corp @2019 </span>\r\n              </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { CatalogView, ProductView } from './views/Catalog';\r\nimport NestedView from './views/Nested';\r\nimport WarungView from './views/warung/Warung';\r\nimport PostWarungView from './views/warung/postWarung';\r\nimport Nav from './shared/Navbar';\r\nimport Footer from './shared/Footer';\r\n\r\nfunction NotFound() {\r\n    return(\r\n        <div>\r\n            <h1> 404 Not Found </h1>\r\n            <p> <h3> The Page What Your Request Is Not Found </h3> </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass Indes extends Component {\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div>    \r\n                    <Nav />\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={CatalogView} />\r\n                            <Route path=\"/warung\" component={WarungView} />\r\n                            <Route path=\"/create-warung\" component={PostWarungView} />\r\n                            <Route path=\"/catalog\" component={CatalogView} />\r\n                            <Route path=\"/product/:id\" component={ProductView} />\r\n                            <Route path=\"/nested\" component={NestedView} />\r\n                            <Route component={NotFound} /> \r\n                        </Switch>\r\n                    <div>\r\n                        <Footer />\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Indes;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Indeks from './indeks';\nimport Indes from './indes';\nimport * as serviceWorker from './registerServiceWorker';\nimport HttpsRedirect from 'react-https-redirect';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <HttpsRedirect>\n            <Indes />\n        </HttpsRedirect>\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}