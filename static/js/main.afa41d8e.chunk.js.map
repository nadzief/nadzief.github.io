{"version":3,"sources":["helpers/history.js","root/index.js","redux/user/userType.js","redux/user/userAction.js","redux/category/categoryType.js","redux/dataUser/dataUserType.js","redux/berita/beritaType.js","polyfill.js","redux/dataUser/dataUserReducer.js","redux/berita/beritaReducer.js","redux/category/categoryReducer.js","redux/reducers.js","redux/store/index.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","history","history__WEBPACK_IMPORTED_MODULE_0__","createBrowserHistory","API","concat","module","exports","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","login","username","dispatch","type","actionTypes","loading","URL","axios","post","headers","Access-Control-Allow-Origin","then","response","error","data","code","payload","window","localStorage","setItem","JSON","stringify","push","swal","catch","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","GET_CATEGORY_FAILED","GET_CATEGORY_BY_ID_REQUEST","GET_CATEGORY_BY_ID_SUCCESS","GET_CATEGORY_BY_ID_FAILED","POST_CATEGORY_REQUEST","POST_CATEGORY_SUCCESS","POST_CATEGORY_FAILED","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAILED","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_SUCCESS","EDIT_CATEGORY_FAILED","GET_DATA_USER_REQUEST","GET_DATA_USER_SUCCESS","GET_DATA_USER_FAILED","GET_DATA_USER_BY_ID_REQUEST","GET_DATA_USER_BY_ID_SUCCESS","GET_DATA_USER_BY_ID_FAILED","POST_DATA_USER_REQUEST","POST_DATA_USER_SUCCESS","POST_DATA_USER_FAILED","DELETE_DATA_USER_REQUEST","DELETE_DATA_USER_SUCCESS","DELETE_DATA_USER_FAILED","EDIT_DATA_USER_REQUEST","EDIT_DATA_USER_SUCCESS","EDIT_DATA_USER_FAILED","GET_BERITA_REQUEST","GET_BERITA_SUCCESS","GET_BERITA_FAILED","GET_BERITA_BY_ID_REQUEST","GET_BERITA_BY_ID_SUCCESS","GET_BERITA_BY_ID_FAILED","POST_BERITA_REQUEST","POST_BERITA_SUCCESS","POST_BERITA_FAILED","DELETE_BERITA_REQUEST","DELETE_BERITA_SUCCESS","DELETE_BERITA_FAILED","EDIT_BERITA_REQUEST","EDIT_BERITA_SUCCESS","EDIT_BERITA_FAILED","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","initialState","datas","success","combineReducers","dataUser","state","arguments","length","action","actionType","Object","objectSpread","postDataUser","editDataUser","dataBerita","postBerita","editBerita","dataCategory","postCategory","editCategory","routing","routerReducer","middlewares","routerMiddleware","thunk","logger","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","getItem","to","pathname","from","location","DefaultLayout","React","lazy","Promise","all","e","bind","Login","App","es","store","Suspense","fallback","className","exact","path","name","components_PrivateRoute_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afa41d8e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","const version = 'v1';\r\n\r\nconst API = `https://cryptic-mesa-74467.herokuapp.com/${version}/`;\r\n\r\nmodule.exports = API","export const LOGIN_REQUEST = 'LOGIN REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN FAILED';","import axios from 'axios';\r\n// import { push } from 'react-router-redux'\r\nimport * as actionTypes from './userType';\r\nimport API from '../../root/';\r\nimport swal from 'sweetalert';\r\nimport { history } from '../../helpers/history';\r\n\r\nexport function login(username){\r\n    return function(dispatch){\r\n        dispatch({ type: actionTypes.LOGIN_REQUEST, loading: true })\r\n        const URL = API+`post/login/`\r\n        return axios.post(URL, username, {headers:{'Access-Control-Allow-Origin': '*'}})\r\n            .then(function(response, error){\r\n                if(response.data.code === 200){\r\n                    dispatch({ type: actionTypes.LOGIN_SUCCESS, payload: response.data })\r\n                    window.localStorage.setItem('users', JSON.stringify(username.username))\r\n                    history.push('/')\r\n                }\r\n                else if(username === \"\"){\r\n                    swal(\"Error!\", \"Username or Password does not empty\", \"error\")\r\n                }\r\n                else if(response.data.code === 204){\r\n                    dispatch({ type: actionTypes.LOGIN_FAILED, payload: error })\r\n                    swal(\"Error\", \"Wrong Username or Password\", \"error\")\r\n                }\r\n                else{\r\n                    swal(\"Error!\", \"Unable to connect database\", \"error\")\r\n                }\r\n            })\r\n            .catch(function(error){\r\n                dispatch({ type: actionTypes.LOGIN_FAILED, payload: error })\r\n            })\r\n    }\r\n}","// Get Category\r\nexport const GET_CATEGORY_REQUEST = 'GET_CATEGORY_REQUEST';\r\nexport const GET_CATEGORY_SUCCESS = 'GET_CATEGORY_SUCCESS';\r\nexport const GET_CATEGORY_FAILED = 'GET_CATEGORY_FAILED';\r\n\r\n// Get Category By ID\r\nexport const GET_CATEGORY_BY_ID_REQUEST = 'GET_CATEGORY_BY_ID_REQUEST';\r\nexport const GET_CATEGORY_BY_ID_SUCCESS = 'GET_CATEGORY_BY_ID_SUCCESS';\r\nexport const GET_CATEGORY_BY_ID_FAILED = 'GET_CATEGORY_BY_ID_FAILED';\r\n\r\n// Post Category\r\nexport const POST_CATEGORY_REQUEST = 'POST_CATEGORY_REQUEST';\r\nexport const POST_CATEGORY_SUCCESS = 'POST_CATEGORY_SUCCESS';\r\nexport const POST_CATEGORY_FAILED = 'POST_CATEGORY_FAILED';\r\n\r\n// Delete Category\r\nexport const DELETE_CATEGORY_REQUEST = 'DELETE_CATEGORY_REQUEST';\r\nexport const DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS';\r\nexport const DELETE_CATEGORY_FAILED = 'DELETE_CATEGORY_FAILED';\r\n\r\n// Edit Category\r\nexport const EDIT_CATEGORY_REQUEST = 'EDIT_CATEGORY_REQUEST';\r\nexport const EDIT_CATEGORY_SUCCESS = 'EDIT_CATEGORY_SUCCESS';\r\nexport const EDIT_CATEGORY_FAILED = 'EDIT_CATEGORY_FAILED';","// Get Data User\r\nexport const GET_DATA_USER_REQUEST = 'GET_DATA_USER_REQUEST';\r\nexport const GET_DATA_USER_SUCCESS = 'GET_DATA_USER_SUCCESS';\r\nexport const GET_DATA_USER_FAILED = 'GET_DATA_USER_FAILED';\r\n\r\n// Get Data User By ID\r\nexport const GET_DATA_USER_BY_ID_REQUEST = 'GET_DATA_USER_BY_ID_REQUEST';\r\nexport const GET_DATA_USER_BY_ID_SUCCESS = 'GET_DATA_USER_BY_ID_SUCCESS';\r\nexport const GET_DATA_USER_BY_ID_FAILED = 'GET_DATA_USER_BY_ID_FAILED';\r\n\r\n// Post Data User\r\nexport const POST_DATA_USER_REQUEST = 'POST_DATA_USER_REQUEST';\r\nexport const POST_DATA_USER_SUCCESS = 'POST_DATA_USER_SUCCESS';\r\nexport const POST_DATA_USER_FAILED = 'POST_DATA_USER_FAILED';\r\n\r\n// Delete Data User\r\nexport const DELETE_DATA_USER_REQUEST = 'DELETE_DATA_USER_REQUEST';\r\nexport const DELETE_DATA_USER_SUCCESS = 'DELETE_DATA_USER_SUCCESS';\r\nexport const DELETE_DATA_USER_FAILED = 'DELETE_DATA_USER_FAILED';\r\n\r\n// Edit Data User\r\nexport const EDIT_DATA_USER_REQUEST = 'EDIT_DATA_USER_REQUEST';\r\nexport const EDIT_DATA_USER_SUCCESS = 'EDIT_DATA_USER_SUCCESS';\r\nexport const EDIT_DATA_USER_FAILED = 'EDIT_DATA_USER_FAILED';","// Get Berita\r\nexport const GET_BERITA_REQUEST = 'GET_BERITA_REQUEST';\r\nexport const GET_BERITA_SUCCESS = 'GET_BERITA_SUCCESS';\r\nexport const GET_BERITA_FAILED = 'GET_BERITA_FAILED';\r\n\r\n// Get Berita By ID\r\nexport const GET_BERITA_BY_ID_REQUEST = 'GET_BERITA_BY_ID_REQUEST';\r\nexport const GET_BERITA_BY_ID_SUCCESS = 'GET_BERITA_BY_ID_SUCCESS';\r\nexport const GET_BERITA_BY_ID_FAILED = 'GET_BERITA_BY_ID_FAILED';\r\n\r\n// Post Berita\r\nexport const POST_BERITA_REQUEST = 'POST_BERITA_REQUEST';\r\nexport const POST_BERITA_SUCCESS = 'POST_BERITA_SUCCESS';\r\nexport const POST_BERITA_FAILED = 'POST_BERITA_FAILED';\r\n\r\n// Delete Berita\r\nexport const DELETE_BERITA_REQUEST = 'DELETE_BERITA_REQUEST';\r\nexport const DELETE_BERITA_SUCCESS = 'DELETE_BERITA_SUCCESS';\r\nexport const DELETE_BERITA_FAILED = 'DELETE_BERITA_FAILED';\r\n\r\n// Edit Berita\r\nexport const EDIT_BERITA_REQUEST = 'EDIT_BERITA_REQUEST';\r\nexport const EDIT_BERITA_SUCCESS = 'EDIT_BERITA_SUCCESS';\r\nexport const EDIT_BERITA_FAILED = 'EDIT_BERITA_FAILED';","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import * as actionType from './dataUserType';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    datas: [],\r\n    loading: false,\r\n    success: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionType.GET_DATA_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_DATA_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        case actionType.GET_DATA_USER_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.GET_DATA_USER_BY_ID_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_DATA_USER_BY_ID_SUCCESS:\r\n            return{\r\n                ...state,\r\n                datas: action.payload\r\n            }\r\n        case actionType.GET_DATA_USER_BY_ID_FAILED:\r\n            return{\r\n                ...state,\r\n                datas: action.payload.error\r\n            }\r\n        case actionType.POST_DATA_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.POST_DATA_USER_SUCCESS:\r\n            const postDataUser = { data: action.payload }\r\n            return{\r\n                ...state,\r\n                ...postDataUser\r\n            }\r\n        case actionType.POST_DATA_USER_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.DELETE_DATA_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.DELETE_DATA_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                success: true\r\n            }\r\n        case actionType.DELETE_DATA_USER_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.EDIT_DATA_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.EDIT_DATA_USER_SUCCESS:\r\n            const editDataUser = { datas: action.payload }\r\n            return {\r\n                ...state,\r\n                ...editDataUser\r\n            }\r\n        case actionType.EDIT_DATA_USER_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionType from './beritaType';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    datas: [],\r\n    loading: false,\r\n    success: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionType.GET_BERITA_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_BERITA_SUCCESS:\r\n            return{\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        case actionType.GET_BERITA_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.GET_BERITA_BY_ID_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_BERITA_BY_ID_SUCCESS:\r\n            return{\r\n                ...state,\r\n                datas: action.payload\r\n            }\r\n        case actionType.GET_BERITA_BY_ID_FAILED:\r\n            return{\r\n                ...state,\r\n                datas: action.payload.error\r\n            }\r\n        case actionType.POST_BERITA_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.POST_BERITA_SUCCESS:\r\n            const postBerita = { data: action.payload }\r\n            return{\r\n                ...state,\r\n                ...postBerita\r\n            }\r\n        case actionType.POST_BERITA_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.DELETE_BERITA_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.DELETE_BERITA_SUCCESS:\r\n            return{\r\n                ...state,\r\n                success: true\r\n            }\r\n        case actionType.DELETE_BERITA_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.EDIT_BERITA_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.EDIT_BERITA_SUCCESS:\r\n            const editBerita = { data: action.payload }\r\n            return{\r\n                ...state,\r\n                ...editBerita\r\n            }\r\n        case actionType.EDIT_BERITA_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionType from './categoryType';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    datas: [],\r\n    loading: false,\r\n    success: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionType.GET_CATEGORY_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_CATEGORY_SUCCESS:\r\n            return{\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        case actionType.GET_CATEGORY_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.GET_CATEGORY_BY_ID_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.GET_CATEGORY_BY_ID_SUCCESS:\r\n            return{\r\n                ...state,\r\n                datas: action.payload\r\n            }\r\n        case actionType.GET_CATEGORY_BY_ID_FAILED:\r\n            return{\r\n                ...state,\r\n                datas: action.payload.error\r\n            }\r\n        case actionType.POST_CATEGORY_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.POST_CATEGORY_SUCCESS:\r\n            const postCategory = { data: action.payload }\r\n            return{\r\n                ...state,\r\n                ...postCategory\r\n            }\r\n        case actionType.POST_CATEGORY_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.DELETE_CATEGORY_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.DELETE_CATEGORY_SUCCESS:\r\n            return{\r\n                ...state,\r\n                success: true\r\n            }\r\n        case actionType.DELETE_CATEGORY_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        case actionType.EDIT_CATEGORY_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.EDIT_CATEGORY_SUCCESS:\r\n            const editCategory = { data: action.payload }\r\n            return{\r\n                ...state,\r\n                ...editCategory\r\n            }\r\n        case actionType.EDIT_CATEGORY_FAILED:\r\n            return{\r\n                ...state,\r\n                data: action.payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n// import { reducer as formReducer } from 'redux-form';\r\nimport { login } from './user/userAction';\r\n// import datas from './data/dataReducer';\r\nimport datasUser from './dataUser/dataUserReducer';\r\nimport datasBerita from './berita/beritaReducer';\r\nimport datasCategory from './category/categoryReducer';\r\n\r\nexport default combineReducers({\r\n    login,\r\n    // data: datas,\r\n    dataUser: datasUser,\r\n    dataBerita: datasBerita,\r\n    dataCategory: datasCategory,\r\n    // form: formReducer,\r\n    routing: routerReducer\r\n});","import { applyMiddleware, createStore } from 'redux';\r\n// import { createEpicMiddleware } from 'redux-observable';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { history } from '../../helpers/history';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst router = routerMiddleware(history)\r\nconst middlewares = [router, thunk, logger]\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(\r\n            ...middlewares\r\n        )\r\n    )\r\n);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route \r\n        {...rest} \r\n        render={props => (\r\n            window.localStorage.getItem('users')\r\n                ? (\r\n                    <Component {...props} />\r\n                ): (\r\n                    <Redirect \r\n                        to={{ \r\n                            pathname: '/login', \r\n                            state: { from: props.location } \r\n                        }} \r\n                    />\r\n                )\r\n        )} \r\n    />\r\n)\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport { \n  Router, \n  Route, \n  Switch \n} from 'react-router-dom';\n// import ConnectedRouter from 'react-router-redux'; \n// import { renderRoutes } from 'react-router-config';\nimport { Provider } from 'react-redux';\nimport { history } from './helpers/history';\nimport store from './redux/store';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n// import store from './redux/store/store'; \nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}> \n          <React.Suspense fallback={loading()}>\n            <Switch>\n              <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n              <PrivateRoute path=\"/\" name=\"Home\" component={DefaultLayout} />\n              {/* <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>} /> */}\n            </Switch>\n          </React.Suspense>\n        </Router> \n      </Provider> \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/stable';\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}